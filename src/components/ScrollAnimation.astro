---
const { animation = "fade-up", duration = "1000", delay = "0" } = Astro.props;
---

<div
  class="scroll-animation opacity-0"
  data-animation={animation}
  data-duration={duration}
  data-delay={delay}
>
  <slot />
</div>

<script>
  const observerOptions = {
    root: null,
    rootMargin: "0px",
    threshold: 0.1,
  };

  const observer = new IntersectionObserver((entries) => {
    entries.forEach((entry) => {
      if (entry.isIntersecting) {
        const element = entry.target as HTMLElement;
        const animation = element.dataset.animation || "fade-up";
        const duration = element.dataset.duration || "1000";
        const delay = element.dataset.delay || "0";

        element.style.animationName = animation;
        element.style.animationDuration = `${duration}ms`;
        element.style.animationDelay = `${delay}ms`;
        element.style.animationFillMode = "forwards";
        element.classList.remove("opacity-0");

        observer.unobserve(element);
      }
    });
  }, observerOptions);

  document.addEventListener("astro:page-load", () => {
    const elements = document.querySelectorAll(".scroll-animation");
    elements.forEach((el) => observer.observe(el));
  });
</script>

<style>
  @keyframes fade-up {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes fade-in {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }

  @keyframes scale-up {
    from {
      opacity: 0;
      transform: scale(0.8);
    }
    to {
      opacity: 1;
      transform: scale(1);
    }
  }

  .scroll-animation {
    animation-fill-mode: both;
  }
</style>